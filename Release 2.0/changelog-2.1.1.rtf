{\rtf1\ansi\deff3\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset2 Symbol;}{\f2\fswiss\fprq2\fcharset0 Arial;}{\f3\froman\fprq2\fcharset128 Times New Roman;}{\f4\fswiss\fprq2\fcharset128 Arial;}{\f5\fmodern\fprq1\fcharset128 Courier New;}{\f6\fswiss\fprq2\fcharset128 Arial Unicode MS;}}
{\colortbl;\red0\green0\blue0;\red128\green128\blue128;}
{\stylesheet{\s0\snext0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\nowidctlpar\cf0\kerning1\hich\af6\langfe2052\dbch\af6\afs24\lang1081\loch\f3\fs24\lang1033 Normal;}
{\s1\sbasedon25\snext26\ilvl0\outlinelevel0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af6\ab\loch\f4\fs24\lang1033 Heading 1;}
{\s2\sbasedon25\snext26\ilvl1\outlinelevel1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\i\b\kerning1\hich\af6\langfe2052\dbch\af6\ai\ab\loch\f4\fs22\lang1033 Heading 2;}
{\s3\sbasedon25\snext26\ilvl2\outlinelevel2{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af6\ab\loch\f4\fs20\lang1033 Heading 3;}
{\s4\sbasedon25\snext26\ilvl3\outlinelevel3{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\i\b\kerning1\hich\af6\langfe2052\dbch\af6\ai\ab\loch\f4\fs20\lang1033 Heading 4;}
{\s5\sbasedon25\snext26\ilvl4\outlinelevel4{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\ul\ulc0\b\kerning1\hich\af6\langfe2052\dbch\af6\ab\loch\f4\fs20\lang1033 Heading 5;}
{\*\cs15\snext15 RTF_Num 2 1;}
{\*\cs16\snext16 RTF_Num 2 2;}
{\*\cs17\snext17 RTF_Num 2 3;}
{\*\cs18\snext18 RTF_Num 2 4;}
{\*\cs19\snext19 RTF_Num 2 5;}
{\*\cs20\snext20 RTF_Num 2 6;}
{\*\cs21\snext21 RTF_Num 2 7;}
{\*\cs22\snext22 RTF_Num 2 8;}
{\*\cs23\snext23 RTF_Num 2 9;}
{\*\cs24\snext24\b\ab Strong Emphasis;}
{\s25\sbasedon0\snext26{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\kerning1\hich\af6\langfe2052\dbch\af6\loch\f4\fs24\lang1033 Heading;}
{\s26\sbasedon0\snext26{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033 Text body;}
{\s27\sbasedon26\snext27{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa120\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033 List;}
{\s28\sbasedon0\snext28{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb120\sa120\cf0\i\kerning1\hich\af3\langfe2052\dbch\af3\ai\loch\f3\fs24\lang1033 Caption;}
{\s29\sbasedon0\snext29{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\cf0\kerning1\hich\af3\langfe2052\dbch\af3\loch\f3\fs24\lang1033 Index;}
{\s30\sbasedon0\snext30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033 Preformatted Text;}
}{\info{\creatim\yr0\mo0\dy0\hr0\min0}{\revtim\yr0\mo0\dy0\hr0\min0}{\printim\yr0\mo0\dy0\hr0\min0}{\comment LibreOffice}{\vern3300}}\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709\deftab709

{\*\pgdsctbl
{\pgdsc0\pgdscuse195\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\pgdscnxt0 Default;}}
\formshade{\*\pgdscno0}\paperh15840\paperw12240\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\sectunlocked1\pgndec\pgwsxn12240\pghsxn15840\marglsxn1134\margrsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
\pgndec\pard\plain \s25{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\kerning1\hich\af6\langfe2052\dbch\af6\loch\f4\fs24\lang1033\qc\sb240\sa120{\b\afs24\ab\rtlch \ltrch\loch
EyeFiServer 2.1.1 beta}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s1\ilvl0\outlinelevel0{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af6\ab\loch\f4\fs24\lang1033\li432\ri0\lin432\rin0\fi-432{\rtlch \ltrch\loch
Change Log}
\par \pard\plain \s2\ilvl1\outlinelevel1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\i\b\kerning1\hich\af6\langfe2052\dbch\af6\ai\ab\loch\f4\fs22\lang1033\li576\ri0\lin576\rin0\fi-576{\rtlch \ltrch\loch
Test Environments}
\par \pard\plain \s3\ilvl2\outlinelevel2{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af6\ab\loch\f4\fs20\lang1033\li720\ri0\lin720\rin0\fi-720{\rtlch \ltrch\loch
Server}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\ul\ulc0\rtlch \ltrch\loch\loch\f4
Synology DiskStation DS1511+\tab }{\rtlch \ltrch\loch\loch\f4
\tab }{\ul\ulc0\rtlch \ltrch\loch\loch\f4
MacBookPro}{\rtlch \ltrch\loch\loch\f4
\tab \tab \tab }{\ul\ulc0\rtlch \ltrch\loch\loch\f4
VMWare Fusion for Mac}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
DSM firmware version 3.1-1742\tab \tab Mac OS X v 10.6.8\tab \tab Windows XP SP3}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
Python v2.6.7 (verified)\tab \tab \tab Python v2.6.1 (}{\i\afs16\ai\rtlch \ltrch\loch\fs16\loch\f4
testing}{\afs16\rtlch \ltrch\loch\fs16\loch\f4
)\tab \tab Python v2.6.x (need to find binaries and install)}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
Python v2.7.2 (verified)\tab \tab \tab Python v2.7.2 (}{\i\afs16\ai\rtlch \ltrch\loch\fs16\loch\f4
testing}{\afs16\rtlch \ltrch\loch\fs16\loch\f4
)\tab \tab Python v2.7.2 (}{\i\afs16\ai\rtlch \ltrch\loch\fs16\loch\f4
need to instal}{\afs16\rtlch \ltrch\loch\fs16\loch\f4
l)}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
\tab \tab \tab \tab \tab \tab \tab \tab \tab }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
\tab \tab \tab \tab \tab \tab \tab \tab \tab Linux Ubuntu 11.04}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
\tab \tab \tab \tab \tab \tab \tab \tab \tab }{\afs16\rtlch \ltrch\loch\fs16\loch\f4
Python v2.7.1+ (testing)}
\par \pard\plain \s3\ilvl2\outlinelevel2{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af6\ab\loch\f4\fs20\lang1033\li720\ri0\lin720\rin0\fi-720{\rtlch \ltrch\loch
Cards}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
Eye-Fi Pro x2 8 GByte firmware version 4.5022}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
Eye-Fi Pro x2 8 GByte firmware version 4.2120}
\par \pard\plain \s3\ilvl2\outlinelevel2{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af6\ab\loch\f4\fs20\lang1033\li720\ri0\lin720\rin0\fi-720{\rtlch \ltrch\loch
Cameras}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
Panasonic Lumix DMC-GH2 firmware version 1.0\tab \tab \tab JPG, RW2 (raw), MTS}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
Panasonic Lumix DMC-FX37\tab \tab \tab \tab \tab \tab JPG}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
Nikon D300 firmware version 1.10\tab \tab \tab \tab \tab JPG, NEF (raw)}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
Sanyo PD-2\tab \tab \tab \tab \tab \tab \tab \tab JPG, MP4}
\par \pard\plain \s2\ilvl1\outlinelevel1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\i\b\kerning1\hich\af6\langfe2052\dbch\af6\ai\ab\loch\f4\fs22\lang1033\li576\ri0\lin576\rin0\fi-576{\rtlch \ltrch\loch
Introduction}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
I have a working knowledge of the Python language, but have little or no experience working with HTTP responders, SOAP, etc. so I have relied totally on Jeff's experience and code for that.  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
I do have experience working with EXIF data in Python and have used EXIF.py for other \'81\'67in-house\'81\'68 projects, so integrating EXIF data extraction with the server was relatively straightforward.}
\par \pard\plain \s2\ilvl1\outlinelevel1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\i\b\kerning1\hich\af6\langfe2052\dbch\af6\ai\ab\loch\f4\fs22\lang1033\li576\ri0\lin576\rin0\fi-576{\rtlch \ltrch\loch
New Feature Additions}
\par \pard\plain \s3\ilvl2\outlinelevel2{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af6\ab\loch\f4\fs20\lang1033\li720\ri0\lin720\rin0\fi-720{\rtlch \ltrch\loch
Custom Destination Folders}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
The design specifications for adding custom destination folders and filenames, required a temporary folder to be created and deleted with each life cycle of the server.  This is facilitated by the Python tempfile library (see http://docs.python.org/library/tempfile.html#tempfile.mkdtemp).  The EyeFiServer class holds the string variable of the folder's path and creates the folder in its __init__() method and deletes it in its stop() method. The folder name is suffixed with '.eyefi' to make cleanup easier if the server dies without cleaning up via the stop() method.  The OS specific environment variables are used by tempfile.mkdtemp to find the parent folder as specified by the library description.}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
The [Global] downloadLocation is a base (root) folder and due to the unique hardware address (MAC) of an Eye-Fi card should allow very specific and customizable upload destinations.  A highly customizable templated configuration scheme for the upload folder destination required adding options under each unique 'macaddress' section of the configuration ini file.}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
Currently, the folder(s) are created, if they don't already exist, at upload time.  I think in the next version, it would be a good idea to test for the existence of the base folder at initiation of the server via __init__() with verification of the creation of the base folder before the server starts listening.  This interaction, however, would be problematic if the server is started automatically, say, with cron, so some sort of timeout and default option value would need to be implemented.}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
Of course, custom folders based on uploaded file EXIF data via the template mechanism would have to be created 'on the fly' without user interaction.}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
EXIF data is extracted via the EXIF.py (see http://sourceforge.net/projects/exif-py/).  However, I've had to add support for Panasonic Lumix raw file by adding a signature to the code, so the EXIF.py file in this repo is now forked from the original I downloaded from sourceforge.}
\par \pard\plain \s3\ilvl2\outlinelevel2{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af6\ab\loch\f4\fs20\lang1033\li720\ri0\lin720\rin0\fi-720{\rtlch \ltrch\loch
Overwrite Protection}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
Overwrite protection is important, especially in environments with multiple identical cameras that may duplicate filenames and cause collisions if the upload destinations are identical.  The above mentioned customizable destination options should make overwrite protection unnecessary, but the feature is enabled by default.}
\par \pard\plain \s2\ilvl1\outlinelevel1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\i\b\kerning1\hich\af6\langfe2052\dbch\af6\ai\ab\loch\f4\fs22\lang1033\li576\ri0\lin576\rin0\fi-576{\rtlch \ltrch\loch
Added Configuration Options}
\par \pard\plain \s3\ilvl2\outlinelevel2{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af6\ab\loch\f4\fs20\lang1033\li720\ri0\lin720\rin0\fi-720{\rtlch \ltrch\loch
'Global' Section}
\par \pard\plain \s4\ilvl3\outlinelevel3{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\i\b\kerning1\hich\af6\langfe2052\dbch\af6\ai\ab\loch\f4\fs20\lang1033\li864\ri0\lin864\rin0\fi-864{\rtlch \ltrch\loch
INTEGRITYDIGEST Verification Option}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
This feature has been intermittently failing in my primary test bed, i.e., Synology DiskStation DS1511+.  Initially, I hard coded, i.e., commented out the verification code.  However, to be more accommodating to those whose systems are, perhaps, more "robust", I decided to provide a configuration option to allow it to be turned ON or OFF.  Actually, it is ON by default, and only needs to be turned OFF under special circumstances. IDVerification=[Off|On].  (If the option is no specified or commented, it is ON).}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
Not being at all familiar with \'81\'67digesting\'81\'68, I don't know exactly what the implications are of having the verification set to OFF.  In an intranet situation, is this opening it up for potential attacks?}
\par \pard\plain \s4\ilvl3\outlinelevel3{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\i\b\kerning1\hich\af6\langfe2052\dbch\af6\ai\ab\loch\f4\fs20\lang1033\li864\ri0\lin864\rin0\fi-864{\rtlch \ltrch\loch
Overwrite Option}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
The server by default will not overwrite a file that already exists in the DownloadLocation folder, but will add a numerically sequential suffix to the base filename, e.g., "_1000382.JPG" will be followed by "_1000382-001.JPG", "_1000382-002.JPG", etc.}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
If the Overwrite option is uncommented and set to 'TRUE' (without the quotes [regardless of case]), the server will overwrite a pre-existing file in the DownloadLocation folder.  If the Overwrite option is uncommented and set to ANYTHING other than 'TRUE' (again, without the quotes [regardless of case]), the server will NOT overwrite a pre-existing file in the DownloadLocation folder, i.e., Overwrite is still set to FALSE (Off).}
\par \pard\plain \s4\ilvl3\outlinelevel3{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\i\b\kerning1\hich\af6\langfe2052\dbch\af6\ai\ab\loch\f4\fs20\lang1033\li864\ri0\lin864\rin0\fi-864{\rtlch \ltrch\loch
MAC Address Specific Options}
\par \pard\plain \s5\ilvl4\outlinelevel4{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\ul\ulc0\b\kerning1\hich\af6\langfe2052\dbch\af6\ab\loch\f4\fs20\lang1033\li1008\ri0\lin1008\rin0\fi-1008{\rtlch \ltrch\loch
DownloadLocation Option}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
If the option value starts with '$', the following text specifies a sub-folder relative to the [Global] DownloadLocation folder.  It will be relative to the [Global] DownloadLocation folder regardless if the [Global] option has been explicitly specified or not ('./pictures' folder).  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
Example:  [Global] DownloadLocation=./eyefi/pictures and [macaddress] DownloadLocation=$Grants, files will be uploaded to './eyefi/pictures/Grants'.  If the [Global] option is not specified, then the files will be uploaded to './pictures/Grants'}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
If the option value starts with '$' without any subsequent text, files will be uploaded to a subfolder of the [Global] DownloadLocation folder with the name of the MAC address of the card.  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
Example: [Global] DownloadLocation=./eyefi/pictures and [001856417fe6] DownloadLocation=$, files will be uploaded to './eyefi/pictures/001856417fe6.'}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
If the option value does NOT start with '$', the following text specifies an absolute path to the DownloadLocation and overrides any [Global] DownloadLocation.  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
Example:  [macaddress] DownloadLocation=/volume1/GNPhoto/ingest/eyefi and [Global] DownloadLocation=./eyefi/pictures, files will be uploaded to '/volume1/GNPhoto/ingest/eyefi'}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
In any case, if the specified folder (relative or absolute) does not exist, the server will create it.  Currently, folder creation occurs without verification, at runtime prior to file upload.}
\par \pard\plain \s5\ilvl4\outlinelevel4{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\ul\ulc0\b\kerning1\hich\af6\langfe2052\dbch\af6\ab\loch\f4\fs20\lang1033\li1008\ri0\lin1008\rin0\fi-1008{\rtlch \ltrch\loch
AddSubFolder Option}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
The option value specifies a template of a custom subfolder name that will be created based on EXIF data.  The template uses a subset of the Python datetime library strftime directives (see http://docs.python.org/library/datetime.html#strftime-and-strptime-behavior) to format date/time data extracted from the EXIF data of the image that was uploaded from the card:}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%a \tab Locale\'81\'66s abbreviated weekday name. \tab  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%A \tab Locale\'81\'66s full weekday name. \tab  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%b \tab Locale\'81\'66s abbreviated month name. \tab  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%B \tab Locale\'81\'66s full month name. \tab  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%d \tab Day of the month as a decimal number [01,31]. \tab  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%H \tab Hour (24-hour clock) as a decimal number [00,23]. \tab  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%I \tab Hour (12-hour clock) as a decimal number [01,12]. \tab  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%j \tab Day of the year as a decimal number [001,366]. \tab  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%m \tab Month as a decimal number [01,12]. \tab  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%M \tab Minute as a decimal number [00,59]. \tab  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%p \tab Locale\'81\'66s equivalent of either AM or PM.}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%S \tab Second as a decimal number [00,61].}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%U \tab Week number of the year (Sunday as the first day of the week) as a decimal number [00,53]. }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
\tab \tab All days in a new year preceding the first Sunday are considered to be in week 0.}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%w \tab Weekday as a decimal number [0(Sunday),6]. \tab  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%W \tab Week number of the year (Monday as the first day of the week) as a decimal number [00,53]. }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
\tab \tab All days in a new year preceding the first Monday are considered to be in week 0.}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%y \tab Year without century as a decimal number [00,99]. \tab  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%Y \tab Year with century as a decimal number. \tab  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%% \tab A literal '%' character.}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
The template can also contain field based on standard Python Template strings (see http://docs.python.org/library/string.html#template-strings) and currently supports to EXIF fields, 'Image Make' and 'Image Model' and are specified with the fields, '$make' and '$model', respectively.  Other fields could be added easily.}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
If the AddSubFolder option is specified such as "%Y-%m-%d", based on the EXIF data, it might look like this: 2011-06-25}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
Obviously, you cannot use any OS restricted characters such as '.', '\\', '/', ':', etc. when specifying the template.}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
The folder path is relative to the DownloadLocation specified above.  [macaddress] DownloadLocation=/volume1/GNPhoto/ingest/eyefi, [Global] DownloadLocation=./eyefi/pictures, and AddSubFolder="%Y-%b-%d", files will be uploaded to /volume1/GNPhoto/ingest/eyefi/2011-Jun-25}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
The Server will create the folder, if it does not exist.}
\par \pard\plain \s5\ilvl4\outlinelevel4{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\ul\ulc0\b\kerning1\hich\af6\langfe2052\dbch\af6\ab\loch\f4\fs20\lang1033\li1008\ri0\lin1008\rin0\fi-1008{\rtlch \ltrch\loch
RenameFile Option}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
The option value specifies a template of a custom subfolder name that will be created based on EXIF data.  The template uses a subset of the Python datetime library strftime directives (see http://docs.python.org/library/datetime.html#strftime-and-strptime-behavior) to format date/time data extracted from the EXIF data of the image that was uploaded from the card:}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%a \tab \tab Locale\'81\'66s abbreviated weekday name. \tab  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%A \tab \tab Locale\'81\'66s full weekday name. \tab  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%b \tab \tab Locale\'81\'66s abbreviated month name. \tab  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%B\tab  \tab Locale\'81\'66s full month name. \tab  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%d\tab  \tab Day of the month as a decimal number [01,31]. \tab  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%H\tab  \tab Hour (24-hour clock) as a decimal number [00,23]. \tab  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%I\tab  \tab Hour (12-hour clock) as a decimal number [01,12]. \tab  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%j \tab \tab Day of the year as a decimal number [001,366]. \tab  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%m\tab  \tab Month as a decimal number [01,12]. \tab  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%M \tab \tab Minute as a decimal number [00,59]. \tab  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%p \tab \tab Locale\'81\'66s equivalent of either AM or PM.}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%S \tab \tab Second as a decimal number [00,61].}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%U \tab \tab Week number of the year (Sunday as the first day of the week) as a decimal number [00,53]. }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
\tab \tab \tab All days in a new year preceding the first Sunday are considered to be in week 0.}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%w \tab \tab Weekday as a decimal number [0(Sunday),6]. \tab  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%W\tab  \tab Week number of the year (Monday as the first day of the week) as a decimal number [00,53]. }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
\tab \tab \tab All days in a new year preceding the first Monday are considered to be in week 0.}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%y\tab  \tab Year without century as a decimal number [00,99]. \tab  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%Y\tab  \tab Year with century as a decimal number. \tab  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\afs16\rtlch \ltrch\loch\fs16\loch\f4
%%\tab  \tab A literal '%' character.}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
The template can also contain field based on standard Python Template strings (see http://docs.python.org/library/string.html#template-strings) and currently supports to EXIF fields, 'Image Make' and 'Image Model' and are specified with the fields, '$make' and '$model', respectively.  Other fields could be added easily.}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
If the RenameFile option is specified such as "%Y-%m-%d", based on the EXIF data, it might look like this: 2011-06-25.JPG .  If the Overwrite option remains commented or set to FALSE, then the server will sequentially append a numerical suffix to the base file name, e.g, a template value of "%Y-%m-%d $model " would translate to files named 2011-06-25 DMC-GH2.JPG, 2011-06-25 DMC-GH2 001.JPG, 2011-06-25 DMC-GH2 002.JPG, etc.  CAUTION, if the Overwrite options is set to TRUE, the server will write over each preceding file with the same file name and you will have just one file int the folder named after your template, e.g., "%Y-%m-%d $model" --> 2011-06-25 DMC-GH2.JPG}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{{\*\bkmkstart __DdeLink__1_2092772561}{\*\bkmkend __DdeLink__1_2092772561}\rtlch \ltrch\loch\loch\f4
Obviously, you cannot use any OS restricted characters such as '.', '\\', '/', ':', etc. when specifying the template.}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{{\*\bkmkstart __DdeLink__1_209277256121111}{\*\bkmkstart __DdeLink__1_20927725612111}{\*\bkmkend __DdeLink__1_209277256121111}{\*\bkmkend __DdeLink__1_20927725612111}{\*\bkmkstart __DdeLink__1_209277256121111}{\*\bkmkstart __DdeLink__1_20927725612111}{\*\bkmkend __DdeLink__1_209277256121111}{\*\bkmkend __DdeLink__1_20927725612111}\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
The folder path is relative to the DownloadLocation specified above.  [macaddress] DownloadLocation=/volume1/GNPhoto/ingest/eyefi, [Global] DownloadLocation=./eyefi/pictures, and AddSubFolder="%Y-%b-%d" (with EXIF DateTimeOriginal=2011:06:25 00:00:00 in image file), files will be uploaded to '/volume1/GNPhoto/ingest/eyefi/2011-Jun-25'}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
I've added a command line option to the server that tests any templates in the specified configuration file by passing an example image file so that can extract the EXIF data and fill in the templates.  It won't actually start the server, but allows the user to test the templates.  I'm using a '-t --template' switch for this.}
\par \pard\plain \s2\ilvl1\outlinelevel1{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\i\b\kerning1\hich\af6\langfe2052\dbch\af6\ai\ab\loch\f4\fs22\lang1033\li576\ri0\lin576\rin0\fi-576{\rtlch \ltrch\loch
Ongoing Concerns}
\par \pard\plain \s3\ilvl2\outlinelevel2{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af6\ab\loch\f4\fs20\lang1033{\rtlch \ltrch\loch
INTEGRITYDIGEST Verification}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
There still is the issue with INTEGRITYDIGEST verification failing intermittently.  The current server has the verification on/off "switch", but why this is occurring is a mystery to me (see above }{\i\ai\rtlch \ltrch\loch\loch\f4
INTEGRITYDIGEST Verification Option }{\rtlch \ltrch\loch\loch\f4
Section).}
\par \pard\plain \s3\ilvl2\outlinelevel2{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af6\ab\loch\f4\fs20\lang1033{\rtlch \ltrch\loch
Configuration File Keys and Options}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
To make typos less of a problem in the configuration file, it would be nice to convert them to all lower case when read into the eyeFIConfiguration object.  Then tests against the object would be less sensitive to typos.}
\par \pard\plain \s3\ilvl2\outlinelevel2{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\b\kerning1\hich\af6\langfe2052\dbch\af6\ab\loch\f4\fs20\lang1033{\rtlch \ltrch\loch
VIDEO Files and EXIF data}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
Video files don't support EXIF data as do JPG, TIFF, and most RAW file formats.  I don't do a check for whether the file type (extension) matches any particular list of supported file types yet.}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
I scan the file for EXIF data and The EXIF processfile method throws an exception if there is no EXIF data found. I catch the exception and force the upload to the folder based on the 'Global' and '<}{\i\ai\rtlch \ltrch\loch\loch\f4
macaddress}{\rtlch \ltrch\loch\loch\f4
>' DownloadLocation options.  This ignores both 'AddSubFolder' and 'RenameFile' template options.}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
This current scheme is less than optimal.  I think that I should emulate the Eye-Fi Center and allow for three different upload locations based on file type.  Currently, Eye-Fi Center supports JPG, RAW, and video file types (where do TIFF files go?).}
\par \pard\plain \s4\ilvl3\outlinelevel3{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\i\b\kerning1\hich\af6\langfe2052\dbch\af6\ai\ab\loch\f4\fs20\lang1033{\rtlch \ltrch\loch
Photo File Support}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
Based on current testing it is obvious that the cards support uploading JPG. }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s4\ilvl3\outlinelevel3{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\i\b\kerning1\hich\af6\langfe2052\dbch\af6\ai\ab\loch\f4\fs20\lang1033{\rtlch \ltrch\loch
RAW File Type Support}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
According to the Eye-Fi website, the Pro cards support uploading of RAW files.  The file types (extensions) supported include:  .}{\*\cs24\b\ab\rtlch \ltrch\loch\loch\f4
CRW}{\rtlch \ltrch\loch\loch\f4
 }{\*\cs24\b\ab\rtlch \ltrch\loch\loch\f4
.CR2}{\rtlch \ltrch\loch\loch\f4
 }{\*\cs24\b\ab\rtlch \ltrch\loch\loch\f4
.NEF}{\rtlch \ltrch\loch\loch\f4
 }{\*\cs24\b\ab\rtlch \ltrch\loch\loch\f4
.NRW}{\rtlch \ltrch\loch\loch\f4
 }{\*\cs24\b\ab\rtlch \ltrch\loch\loch\f4
.DNG}{\rtlch \ltrch\loch\loch\f4
 }{\*\cs24\b\ab\rtlch \ltrch\loch\loch\f4
.PTX}{\rtlch \ltrch\loch\loch\f4
 }{\*\cs24\b\ab\rtlch \ltrch\loch\loch\f4
.PEF}{\rtlch \ltrch\loch\loch\f4
 }{\*\cs24\b\ab\rtlch \ltrch\loch\loch\f4
.RAW}{\rtlch \ltrch\loch\loch\f4
 }{\*\cs24\b\ab\rtlch \ltrch\loch\loch\f4
.RW2}{\rtlch \ltrch\loch\loch\f4
 }{\*\cs24\b\ab\rtlch \ltrch\loch\loch\f4
.MPO}{\rtlch \ltrch\loch\loch\f4
 }{\*\cs24\b\ab\rtlch \ltrch\loch\loch\f4
.ARW  According to my tests, TIFF files are considered RAW files and are uploaded by Eye-Fi Center into the folder specified for RAW file uploads.}
\par \pard\plain \s4\ilvl3\outlinelevel3{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\i\b\kerning1\hich\af6\langfe2052\dbch\af6\ai\ab\loch\f4\fs20\lang1033{\*\cs24\b\ab\rtlch \ltrch\loch
Video Type Type Support}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
According to the Eye-Fi website (http://support.eye.fi/eye-fi-setup/uploading-photos/upload-video/which-video-formats-do-eye-fi-video-cards-upload/), the cards support uploading video files with file types of: .mpg .mov .flv .wmv .avi .mp4 .mts}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
The upload support of .mts files is limited by the fact that the card only uploads the stream file (.mts) and not the supporting files for the CLIPINFO and PLAYLIST folders as well.}
\par \pard\plain \s4\ilvl3\outlinelevel3{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb240\sa120\keepn\cf0\i\b\kerning1\hich\af6\langfe2052\dbch\af6\ai\ab\loch\f4\fs20\lang1033{\rtlch \ltrch\loch
Proposed Features}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
Based on this research, I will be implementing three option sets in the config .ini file with all three sets available on a MAC address basis:}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
1) AddSubFolder/RenameFile for JPGs\tab \tab \tab 'JPG-AddSubFolder' / 'JPG-RenameFile'}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
This would be implemented the same as the current version.}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
2) AddSubFolder/RenameFile for RAW\tab \tab \tab 'RAW-AddSubFolder' / 'RAW-RenameFile'}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
This would likely be implemented the same as the current version, except I don't have examples of all the different RAW files to verify support of EXIF data extraction.}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
3) AddSubFolder/RenameFile for video\tab \tab \tab 'Video-AddSubFolder' / 'Video-RenameFile'}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
This would be an addition to the current version where I only support uploading to the folder specified by the 'Global' and '<}{\i\ai\rtlch \ltrch\loch\loch\f4
macaddress}{\rtlch \ltrch\loch\loch\f4
>' DownloadLocation options.  }
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch\loch\f4
There could be no EXIF data extraction support, so there would be limited template support.  I could use the upload date (the capture time would not be available) to resolve the datetime template fields.  Other current EXIF data, i.e. 'Image Make' and 'Image Model' would not be substituted in the templates.}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par \pard\plain \s30{\*\hyphen2\hyphlead2\hyphtrail2\hyphmax0}\sb0\sa0\cf0\kerning1\hich\af5\langfe2052\dbch\af5\loch\f5\fs20\lang1033{\rtlch \ltrch\loch
}
\par }